#!/bin/bash

#
# mksp-swimg - make a software image from a raw FS - version 0.0.2 - 2006-03-05
# This file is part of the Formilux project : http://formilux.ant-computing.com/
#
# Copyright (C) 2001-2005 Benoit Dolez & Willy Tarreau
#       mailto: benoit@ant-computing.com,willy@ant-computing.com
#
# This program is licenced under GPLv2 ( http://www.gnu.org/licenses/gpl.txt )

MYNAME="${0##*/}"
CMDLINE="$*"

# usage: displays script usage and returns no error.
function usage {
  echo "MKSP-SWIMG - make a software image from a raw FS - version 0.0.2 - 2006-03-05"
  echo "Usage: ${myname##*/} -o <target_dir> { -i <in_dir> | -c } [ -b build_ver] [ -d ]"
  echo
  echo "   The 'fs' directory will be deleted under <target_dir>, and the execution"
  echo "   will end here if '-c' is set. Otherwise, an 'fs' directory will be created"
  echo "   under <target_dir>, with a software image built from <in_dir>. All paths"
  echo "   are absolute. '-b' is used to force the version which appears in the name."
  echo "   eg: '${myname##*/} -o /tmp/img -i /tmp/fs -b fw-1.12-341'. '-d' for debug."
}

function die {
    echo
    echo "### ${MYNAME}: $@"
    echo "Cmdline was $CMDLINE"
    echo
    exit 1
}

function do_clean {
  rm -rf $OUT_DIR/{fs,base,temp} \
  || die "There was an error cleaning the '$OUT_DIR' directory. Aborting."
}

shopt -s nullglob dotglob
set -o pipefail
umask 022

myname=$0
PRINTUSAGE=0
CLEAN_ONLY=0
DEBUG=0

unset IN_DIR OUT_DIR BUILDVERSION

[ $# -gt 0 ] || PRINTUSAGE=1

while [ $# -gt 0 ] ; do
  case "$1" in 
    -i) # -i in_dir
      if [ -z "$2" -o ! -d "$2/." ]; then
        die "-i argument '$2' point to something not a valid directory. Aborting."
	PRINTUSAGE=1
      fi
      IN_DIR=$2
      shift;
      ;; 
    -o) # -o out_dir : must be a directory or must not exist
      [ -n "$2" -a \( -d "$2/." -o ! -e "$2" \) ] || PRINTUSAGE=1
      OUT_DIR=$2
      shift;
      ;; 
    -b) # -b build_version : force the version which will appear in all kernel.ver
      [ -n "$2" ] || PRINTUSAGE=1
      BUILDVERSION="$2"
      shift;
      ;; 
    -c) # -c = clean
      CLEAN_ONLY=1
      ;;
    -d) # -d = clean
      DEBUG=1
      ;;
    -h) # displays help
      PRINTUSAGE=1
      shift
      ;;
  esac
  shift
done

if [ $PRINTUSAGE -gt 0 -o -z "$OUT_DIR" -o "$OUT_DIR" = "/" -o $CLEAN_ONLY = 0 -a -z "$IN_DIR" ]; then
  usage
  echo
  exit 1
fi

mkdir -p $OUT_DIR || die "Cannot make directory '$OUT_DIR'. Aborting."

[ -n "${OUT_DIR##/*}" ] && OUT_DIR=$PWD/$OUT_DIR
OUT_DIR=${OUT_DIR//\/.\//\/}
[ -n "${IN_DIR##/*}" ] && IN_DIR=$PWD/$IN_DIR
IN_DIR=${IN_DIR//\/.\//\/}

echo;echo "+++ Cleaning output dir +++";echo
do_clean

if [ $CLEAN_ONLY -gt 0 ]; then
  echo "+++ Done ! +++";
  echo "==> The '$OUT_DIR' directory has been cleaned."
  echo
  exit 0
fi

echo;echo "+++ building the software image into $OUT_DIR ++++";echo

mkdir -p $OUT_DIR/fs/ || die "Cannot make directory '$OUT_DIR/fs/'. Aborting."
ln -s $IN_DIR $OUT_DIR/base || die "Cannot make link '$OUT_DIR/base'. Aborting."

#===================================================================================

mkdir -p $OUT_DIR/temp/active || die "Cannot make directory '$OUT_DIR/temp/active'. Aborting."

# try to link files, then fall back to copying if it fails
echo; echo "+++ Linking software files +++"; echo
if ! cp -al $IN_DIR/fs/. $OUT_DIR/temp/active/ 2>/dev/null; then
  echo; echo "+++ Linking failed. Copying software files +++"; echo
  cp -a $IN_DIR/fs/. $OUT_DIR/temp/active/ 2>/dev/null
fi

echo; echo "+++ Checksumming image files +++"; echo
(cd $IN_DIR/fs ; md5sum *) > $OUT_DIR/temp/active/system.sig
chmod 400 $OUT_DIR/temp/active/*

if [ -z "$BUILDVERSION" ]; then
  # no buildversion, we'll try to find it in the link pointed to by
  # usr/share/factory/version (last column in the lst file)
  if [ -L "$IN_DIR/base/usr/share/factory/version" ]; then
    BUILDVERSION=$(readlink $IN_DIR/base/usr/share/factory/version)
  fi
fi

cd $OUT_DIR/temp
if [ -n "$BUILDVERSION" ]; then
  name="$BUILDVERSION".bin
  echo "$BUILDVERSION" > active/system.ver
  cp -al active "$BUILDVERSION"
  tar c "$BUILDVERSION"/* | gzip -9 > "$OUT_DIR/fs/$name" && rm -rf "$BUILDVERSION"
else
  name=software.bin
  tar c active/* | gzip -9 > "$OUT_DIR/fs/$name"
fi

if [ $? -gt 0 ]; then
  echo
  echo "+++ Failed ! +++";
  echo "==> You should check $OUT_DIR/temp'."
  echo
else
  [ $DEBUG -eq 0 ] && rm -rf $OUT_DIR/temp
  echo
  echo "+++ Done ! +++";
  echo "==> You can now use '$OUT_DIR/fs/$name'."
  echo
fi

